version: "3"

services:
  traefik:
    container_name: traefik
    image: traefik:v2.2
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik:/etc/traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.entryPoints=web
      - traefik.http.routers.api.rule=Host(`traefik.hyrule.lan`) && PathPrefix(`/api`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.dashboard.entryPoints=web
      - traefik.http.routers.dashboard.rule=Host(`traefik.hyrule.lan`) && PathPrefix(`/`)
      - traefik.http.routers.dashboard.middlewares=dashboard_redirect@internal
      - traefik.http.routers.dashboard.middlewares=dashboard_stripprefix@internal
      - traefik.http.routers.dashboard.service=dashboard@internal

  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    env_file:
      - env/common.env
    networks:
      - proxy
    volumes:
      - /external-hdd/config/nzbget:/config
      - /external-hdd/downloads:/downloads/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.nzbget-https.tls=true
      - traefik.http.routers.nzbget-https.entrypoints=web-secure
      - traefik.http.routers.nzbget-https.tls.certresolver=default
      - traefik.http.routers.nzbget-https.middlewares=auth@file
      - traefik.http.routers.nzbget-https.rule=Host(`nzbget.jackc.ie`)
      - traefik.http.routers.nzbget-http.entrypoints=web
      - traefik.http.routers.nzbget-http.rule=Host(`nzbget.hyrule.lan`)
      - traefik.http.services.nzbget.loadbalancer.server.port=6789
    depends_on:
      - traefik
    restart: unless-stopped

  plex:
    image: plexinc/pms-docker
    container_name: plex
    networks:
      - proxy
    ports:
      - 32400:32400
    env_file:
      - env/common.env
      - env/plex.env
    volumes:
      - /external-hdd/config/plex:/config
      - /external-hdd/media:/downloads/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex-https.tls=true
      - traefik.http.routers.plex-https.entrypoints=web-secure
      - traefik.http.routers.plex-https.tls.certresolver=default
      - traefik.http.routers.plex-https.rule=Host(`plex.jackc.ie`)
      - traefik.http.routers.plex-http.entrypoints=web
      - traefik.http.routers.plex-http.rule=Host(`plex.hyrule.lan`)
      - traefik.http.services.plex.loadbalancer.server.port=32400
    depends_on:
      - traefik
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    env_file:
      - env/common.env
    volumes:
      - /external-hdd/config/radarr:/config
      - /external-hdd:/downloads
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr-https.tls=true
      - traefik.http.routers.radarr-https.entrypoints=web-secure
      - traefik.http.routers.radarr-https.tls.certresolver=default
      - traefik.http.routers.radarr-https.middlewares=auth@file
      - traefik.http.routers.radarr-https.rule=Host(`radarr.jackc.ie`)
      - traefik.http.routers.radarr.entrypoints=web
      - traefik.http.routers.radarr.rule=Host(`radarr.hyrule.lan`)
      - traefik.http.services.radarr.loadbalancer.server.port=7878
    depends_on:
      - traefik
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    env_file:
      - env/common.env
    volumes:
      - /external-hdd/config/sonarr:/config
      - /external-hdd:/downloads
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr-https.entrypoints=web-secure
      - traefik.http.routers.sonarr-https.tls=true
      - traefik.http.routers.sonarr-https.tls.certresolver=default
      - traefik.http.routers.sonarr-https.middlewares=auth@file
      - traefik.http.routers.sonarr-https.rule=Host(`sonarr.jackc.ie`)
      - traefik.http.routers.sonarr.entrypoints=web
      - traefik.http.routers.sonarr.rule=Host(`sonarr.hyrule.lan`)
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
    depends_on:
      - traefik
    restart: unless-stopped

  influxdb:
    image: influxdb
    container_name: influxdb
    volumes:
      - /influxdb:/var/lib/influxdb
      - ./config/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    networks:
      - database
    restart: unless-stopped

  telegraf:
    image: telegraf
    container_name: telegraf
    ports:
      - 8125:8125/udp
    volumes:
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    networks:
      - database
    env_file:
      - env/telegraf.env
    depends_on:
      - influxdb
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      - proxy
      - database
    ports:
      - 3000:3000
    volumes:
      - /grafana:/var/lib/grafana
    env_file:
      - env/grafana.env
    depends_on:
      - influxdb
      - traefik
    user: "1000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana-https.tls=true
      - traefik.http.routers.grafana-https.entrypoints=web-secure
      - traefik.http.routers.grafana-https.tls.certresolver=default
      - traefik.http.routers.grafana-https.middlewares=auth@file
      - traefik.http.routers.grafana-https.rule=Host(`grafana.jackc.ie`)
      - traefik.http.routers.grafana.entrypoints=web
      - traefik.http.routers.grafana.rule=Host(`grafana.hyrule.lan`)
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    restart: unless-stopped

networks:
  database:
    driver: bridge
  proxy:
    ipam:
      driver: default
      config:
        - subnet: 172.26.0.0/16
